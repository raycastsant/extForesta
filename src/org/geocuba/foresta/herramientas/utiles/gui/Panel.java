package org.geocuba.foresta.herramientas.utiles.gui;

import com.iver.andami.PluginServices;
import com.iver.andami.ui.mdiManager.IWindow;
import com.iver.andami.ui.mdiManager.IWindowListener;
import com.iver.andami.ui.mdiManager.SingletonWindow;
import com.iver.andami.ui.mdiManager.WindowInfo;

public class Panel extends javax.swing.JPanel implements IWindow,SingletonWindow,IWindowListener{

	WindowInfo _wi;  //  @jve:decl-index=0:
	protected int MODE=WindowInfo.PALETTE;
	protected String _title="Panel";  //  @jve:decl-index=0:
	protected String _panel_id=null;
	boolean _centered=false;
	
    /** Creates new form Panel */
    public Panel() {
        initComponents();
        //PluginServices.getMDIManager().addCentredWindow(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 293, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 219, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


	public WindowInfo getWindowInfo() {
		// TODO Auto-generated method stub
		if (_wi==null)
		{
//			if(MODE>0)
				_wi = new WindowInfo(MODE);
//			else
//				_wi=new WindowInfo();
			
			_wi.setWidth(this.getPreferredSize().width);
			_wi.setHeight(this.getPreferredSize().height);
			_wi.setTitle(_title);		

		}
		
		return _wi;
	}
	
	public void SetResizable(boolean resizable)
	{
		if(resizable)
			MODE=MODE | WindowInfo.RESIZABLE;
	}
	
	public void Show() {
//		if(this.isShowing())
//		{
//			this.requestFocusInWindow();
//			return;
//		}
//		MODE=WindowInfo.PALETTE | WindowInfo.RESIZABLE;
//		this.setVisible(true);
		
		UIUtils.AddPanel(this);
		
		if(_centered)
			PluginServices.getMDIManager().addCentredWindow(this);
		else
			PluginServices.getMDIManager().addWindow(this);
    }

	public void ShowModal() {
		MODE=WindowInfo.MODALDIALOG;
//		this.setVisible(true);
        PluginServices.getMDIManager().addWindow(this);
    }

	public void Close()
	{
		PluginServices.getMDIManager().closeWindow(this);
	}

	public String Title() {
		return _title;
	}

	public void SetTitle(String _title) {
		this._title = _title;
	}

	public Object getWindowModel() {
		// TODO Auto-generated method stub
		return _panel_id;
	}
	
	 /**
	 * @return the _panel_index
	 */
	public String get_panel_id() {
		return _panel_id;
	}
	
	public void set_panel_id(String panel_id)
	{
		_panel_id=panel_id;
	}

	public void windowActivated() {
		// TODO Auto-generated method stub
		
	}

	public void windowClosed() {
		UIUtils.RemovePanel(this);
	}

	public Object getWindowProfile() {
		// TODO Auto-generated method stub
		return null;
	}
}
